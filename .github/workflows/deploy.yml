name: Deploy to AWS Amplify App

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  OUTPUT_FOLDER: dist

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout Code
        uses: actions/checkout@v3

      - name: üß∞ Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üì¶ Install Dependencies
        run: npm ci

      - name: üõ†Ô∏è Build Project
        run: npm run build

      - name: üîê Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üîç Check & Create Amplify App
        id: amplify-app
        run: |
          echo "üîç Checking for Amplify App..."
          APP_ID=$(aws amplify list-apps --query "apps[?name=='${{ secrets.AMPLIFY_APP_NAME }}'].appId" --output text)

          if [ -z "$APP_ID" ]; then
            echo "üöÄ Creating Amplify App..."
            APP_ID=$(aws amplify create-app \
              --name "${{ secrets.AMPLIFY_APP_NAME }}" \
              --query 'app.appId' \
              --output text)
          else
            echo "‚úÖ Amplify App already exists."
          fi

          echo "AMPLIFY_APP_ID=$APP_ID" >> $GITHUB_ENV
          echo "::set-output name=app_id::$APP_ID"

      - name: üåø Check or Create Branch
        run: |
          echo "üîé Checking for Amplify branch 'main'..."
          BRANCH_EXISTS=$(aws amplify list-branches \
            --app-id $AMPLIFY_APP_ID \
            --query "branches[?branchName=='main'].branchName" --output text)

          if [ -z "$BRANCH_EXISTS" ]; then
            echo "üå± Creating Amplify branch 'main'..."
            aws amplify create-branch \
              --app-id $AMPLIFY_APP_ID \
              --branch-name main
          else
            echo "‚úÖ Amplify branch 'main' exists."
          fi

      - name: ‚è≥ Wait for Running Jobs to Finish
        run: |
          echo "üîç Checking for running jobs..."
          while true; do
            RUNNING=$(aws amplify list-jobs \
              --app-id $AMPLIFY_APP_ID \
              --branch-name main \
              --query "jobSummaries[?status=='PENDING' || status=='RUNNING'].jobId" \
              --output text || echo "")
            if [ -z "$RUNNING" ]; then
              echo "‚úÖ No running jobs. Proceeding..."
              break
            else
              echo "‚è≥ Waiting for existing job to finish (PENDING or RUNNING)..."
              sleep 10
            fi
          done

      - name: üì§ Deploy to Amplify (Manual Upload)
        run: |
          echo "üì¶ Zipping build output..."
          zip -r deployment.zip $OUTPUT_FOLDER

          DEPLOYMENT_ID=$(aws amplify create-deployment \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --query 'deploymentId' --output text)

          echo "üì§ Uploading deployment files..."
          aws amplify upload-files \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --deployment-id $DEPLOYMENT_ID \
            --file deployment.zip

          echo "üöÄ Starting release job..."
          aws amplify start-job \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --job-type RELEASE

      - name: üåê Setup Custom Domain (Optional)
        if: ${{ secrets.CUSTOM_DOMAIN != '' }}
        run: |
          echo "üåê Setting custom domain: ${{ secrets.CUSTOM_DOMAIN }}"
          aws amplify create-domain-association \
            --app-id $AMPLIFY_APP_ID \
            --domain-name "${{ secrets.CUSTOM_DOMAIN }}" \
            --sub-domain-settings "[{\"prefix\": \"www\", \"branchName\": \"main\"}]"
