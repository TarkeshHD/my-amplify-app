name: Deploy Frontend to AWS Amplify (Auto-create)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AMPLIFY_APP_NAME: ${{ secrets.AMPLIFY_APP_NAME }}
      AMPLIFY_DOMAIN_NAME: ${{ secrets.AMPLIFY_DOMAIN_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Node and Dependencies
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run build

      - name: Detect output folder
        run: |
          if [ -d "build" ]; then
            echo "OUTPUT_FOLDER=build" >> $GITHUB_ENV
          elif [ -d "dist" ]; then
            echo "OUTPUT_FOLDER=dist" >> $GITHUB_ENV
          else
            echo "‚ùå No output folder found!"
            exit 1
          fi

      - name: Zip frontend build
        run: |
          cd $OUTPUT_FOLDER
          zip -r ../deployment.zip .
          cd ..

      - name: Create Amplify App (if not exists)
        run: |
          echo "üîç Checking if Amplify app exists..."
          APP_ID=$(aws amplify list-apps --query "apps[?name=='$AMPLIFY_APP_NAME'].appId" --output text)
          if [ -z "$APP_ID" ]; then
            echo "‚öôÔ∏è Creating new Amplify app..."
            APP_ID=$(aws amplify create-app \
              --name "$AMPLIFY_APP_NAME" \
              --repository "manual" \
              --query 'app.appId' \
              --output text)
            echo "‚úÖ Created Amplify App: $APP_ID"
          else
            echo "‚úÖ Amplify App already exists: $APP_ID"
          fi
          echo "AMPLIFY_APP_ID=$APP_ID" >> $GITHUB_ENV

      - name: Create Branch (main) if not exists
        run: |
          BRANCH_EXISTS=$(aws amplify list-branches --app-id $AMPLIFY_APP_ID --query "branches[?branchName=='main'].branchName" --output text)
          if [ "$BRANCH_EXISTS" != "main" ]; then
            aws amplify create-branch \
              --app-id $AMPLIFY_APP_ID \
              --branch-name main \
              --framework "React" \
              --stage "PRODUCTION"
          else
            echo "‚úÖ Branch 'main' already exists"
          fi

      - name: Deploy to Amplify
        run: |
          echo "üöÄ Deploying to Amplify..."
          DEPLOYMENT_ID=$(aws amplify create-deployment \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --query 'deploymentId' --output text)

          aws amplify upload-files \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --deployment-id $DEPLOYMENT_ID \
            --file deployment.zip

          aws amplify start-job \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --job-type RELEASE

      - name: Setup Custom Domain (optional)
        if: env.AMPLIFY_DOMAIN_NAME != ''
        run: |
          echo "üåê Setting up custom domain: $AMPLIFY_DOMAIN_NAME"
          DOMAIN_EXISTS=$(aws amplify list-domain-associations \
            --app-id $AMPLIFY_APP_ID \
            --query "domainAssociations[?domainName=='$AMPLIFY_DOMAIN_NAME'].domainName" \
            --output text || echo "")
          if [ -z "$DOMAIN_EXISTS" ]; then
            aws amplify create-domain-association \
              --app-id $AMPLIFY_APP_ID \
              --domain-name $AMPLIFY_DOMAIN_NAME \
              --sub-domain-settings '[{"prefix":"main","branchName":"main"}]'
          else
            echo "‚úÖ Domain already associated."
          fi

      - name: Show Deployed URL
        run: |
          DOMAIN=$(aws amplify get-app --app-id $AMPLIFY_APP_ID --query 'app.defaultDomain' --output text)
          echo "‚úÖ Deployed at: https://main.$DOMAIN"
