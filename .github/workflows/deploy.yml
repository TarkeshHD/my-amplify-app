name: Deploy to AWS Amplify (Automated)

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AMPLIFY_APP_NAME: ${{ secrets.AMPLIFY_APP_NAME }}
      AMPLIFY_DOMAIN_NAME: ${{ secrets.AMPLIFY_DOMAIN_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Fix dependency mismatch
        run: npm install

      - name: Build project
        run: npm run build

      - name: Detect build output folder
        id: detect_folder
        run: |
          if [ -d "build" ]; then
            echo "OUTPUT_FOLDER=build" >> $GITHUB_ENV
          elif [ -d "dist" ]; then
            echo "OUTPUT_FOLDER=dist" >> $GITHUB_ENV
          else
            echo "‚ùå No output folder found"
            exit 1
          fi

      - name: Zip build output
        run: |
          cd $OUTPUT_FOLDER
          zip -r ../deployment.zip .
          cd ..

      - name: Create Amplify app if not exists
        id: ensure_app
        run: |
          echo "üîç Checking Amplify App: $AMPLIFY_APP_NAME"
          APP_ID=$(aws amplify list-apps --query "apps[?name=='$AMPLIFY_APP_NAME'].appId" --output text)

          if [ -z "$APP_ID" ]; then
            echo "üì¶ App not found, creating it..."
            APP_ID=$(aws amplify create-app \
              --name "$AMPLIFY_APP_NAME" \
              --platform WEB \
              --query 'app.appId' --output text)
            echo "‚úÖ Created App: $APP_ID"
          else
            echo "‚úÖ Found App: $APP_ID"
          fi

          echo "AMPLIFY_APP_ID=$APP_ID" >> $GITHUB_ENV

      - name: Create Amplify branch 'main' if not exists
        run: |
          BRANCH_EXISTS=$(aws amplify list-branches --app-id $AMPLIFY_APP_ID \
            --query "branches[?branchName=='main'].branchName" --output text)

          if [ "$BRANCH_EXISTS" != "main" ]; then
            echo "ü™Ñ Creating branch 'main'..."
            aws amplify create-branch \
              --app-id $AMPLIFY_APP_ID \
              --branch-name main \
              --framework React \
              --stage PRODUCTION \
              --enable-auto-build
          else
            echo "‚úÖ Branch 'main' already exists."
          fi

      - name: Set up custom domain (optional)
        if: env.AMPLIFY_DOMAIN_NAME != ''
        run: |
          EXISTS=$(aws amplify list-domain-associations \
            --app-id $AMPLIFY_APP_ID \
            --query "domainAssociations[?domainName=='$AMPLIFY_DOMAIN_NAME'].domainName" \
            --output text || echo "")

          if [ -z "$EXISTS" ]; then
            echo "üåç Creating domain association..."
            aws amplify create-domain-association \
              --app-id $AMPLIFY_APP_ID \
              --domain-name $AMPLIFY_DOMAIN_NAME \
              --sub-domain-settings '[{"prefix":"main","branchName":"main"}]'
          else
            echo "‚úÖ Domain already exists."
          fi

      - name: Deploy app
        run: |
          DEPLOYMENT_ID=$(aws amplify create-deployment \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --query 'deploymentId' \
            --output text)

          aws amplify upload-files \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --deployment-id $DEPLOYMENT_ID \
            --file deployment.zip

          aws amplify start-job \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --job-type RELEASE

      - name: Output Amplify URL
        run: |
          DOMAIN=$(aws amplify get-app \
            --app-id $AMPLIFY_APP_ID \
            --query 'app.defaultDomain' \
            --output text)

          echo "‚úÖ Your app is live at: https://main.$DOMAIN"
