name: Deploy to AWS Amplify (Final)

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AMPLIFY_APP_NAME: ${{ secrets.AMPLIFY_APP_NAME }}
      AMPLIFY_DOMAIN_NAME: ${{ secrets.AMPLIFY_DOMAIN_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Fetch Amplify App ID and Repo Info
        run: |
          echo "üîç Fetching App ID for: $AMPLIFY_APP_NAME"
          APP_ID=$(aws amplify list-apps --query "apps[?name=='$AMPLIFY_APP_NAME'].appId" --output text)
          echo "AMPLIFY_APP_ID=$APP_ID" >> $GITHUB_ENV
          echo "‚úÖ App ID: $APP_ID"

          REPO_INFO=$(aws amplify get-app \
            --app-id $APP_ID \
            --query 'app.repository' \
            --output text)
          echo "REPO_INFO=$REPO_INFO" >> $GITHUB_ENV
          echo "‚úÖ Repo info: $REPO_INFO"

      - name: Ensure 'main' branch exists in Amplify
        run: |
          BRANCH_EXISTS=$(aws amplify list-branches --app-id $AMPLIFY_APP_ID --query "branches[?branchName=='main'].branchName" --output text)
          if [ "$BRANCH_EXISTS" != "main" ]; then
            echo "üì¶ Creating 'main' branch in Amplify"
            aws amplify create-branch \
              --app-id $AMPLIFY_APP_ID \
              --branch-name main \
              --framework "React" \
              --stage "PRODUCTION" \
              --enable-auto-build
          else
            echo "‚úÖ Branch 'main' already exists"
          fi

      - name: Setup custom domain
        if: env.AMPLIFY_DOMAIN_NAME != ''
        run: |
          echo "üåê Setting up custom domain: $AMPLIFY_DOMAIN_NAME"
          DOMAIN_EXISTS=$(aws amplify list-domain-associations \
            --app-id $AMPLIFY_APP_ID \
            --query "domainAssociations[?domainName=='$AMPLIFY_DOMAIN_NAME'].domainName" \
            --output text || echo "")
          if [ -z "$DOMAIN_EXISTS" ]; then
            aws amplify create-domain-association \
              --app-id $AMPLIFY_APP_ID \
              --domain-name $AMPLIFY_DOMAIN_NAME \
              --sub-domain-settings '[{"prefix":"main","branchName":"main"}]'
          else
            echo "‚úÖ Domain already associated"
          fi

      - name: Trigger Amplify Build (Only if Repo-Connected)
        if: env.REPO_INFO != 'None'
        run: |
          echo "üöÄ Triggering build for repo-connected app..."
          RUNNING=$(aws amplify list-jobs \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --query "jobSummaries[?status=='PENDING' || status=='RUNNING'].jobId" \
            --output text || echo "")
          if [ -n "$RUNNING" ]; then
            echo "‚ö†Ô∏è A job is already running. Skipping deployment."
            exit 0
          fi
          aws amplify start-job \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --job-type RELEASE

      - name: Output Final Deployed URL
        run: |
          if [ "$AMPLIFY_DOMAIN_NAME" != "" ]; then
            echo "‚úÖ Custom Domain: https://main.${AMPLIFY_DOMAIN_NAME}"
          else
            DOMAIN=$(aws amplify get-app \
              --app-id $AMPLIFY_APP_ID \
              --query 'app.defaultDomain' \
              --output text)
            echo "‚úÖ Default Domain: https://main.${DOMAIN}"
          fi
