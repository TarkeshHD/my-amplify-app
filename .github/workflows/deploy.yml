name: Deploy to AWS Amplify

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      AWS_DEFAULT_REGION: us-east-1
      AMPLIFY_APP_ID: d3tph4ka7rwtei
      BRANCH_NAME: main
      OUTPUT_FOLDER: dist
      CUSTOM_DOMAIN: www.example.com
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üß∞ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üèóÔ∏è Build project
        run: npm run build

      - name: üìÅ Zip build output
        run: zip -r deployment.zip $OUTPUT_FOLDER

      - name: üõë Stop any existing pending jobs
        run: |
          LAST_JOB_ID=$(aws amplify list-jobs \
            --app-id $AMPLIFY_APP_ID \
            --branch-name $BRANCH_NAME \
            --query "jobSummaries[?status=='PENDING' || status=='RUNNING'] | [0].jobId" \
            --output text)

          if [ "$LAST_JOB_ID" != "None" ]; then
            echo "üõë Stopping job $LAST_JOB_ID..."
            aws amplify stop-job \
              --app-id $AMPLIFY_APP_ID \
              --branch-name $BRANCH_NAME \
              --job-id "$LAST_JOB_ID"
            sleep 10
          fi

      - name: üöÄ Create deployment & upload
        run: |
          DEPLOYMENT_INFO=$(aws amplify create-deployment \
            --app-id $AMPLIFY_APP_ID \
            --branch-name $BRANCH_NAME)

          DEPLOYMENT_ID=$(echo $DEPLOYMENT_INFO | jq -r '.deploymentId')
          ZIP_URL=$(echo $DEPLOYMENT_INFO | jq -r '.fileUploadUrls."deployment.zip"')

          echo "üì¶ Uploading deployment.zip..."
          curl -T deployment.zip "$ZIP_URL"

          echo "üöÄ Starting release job..."
          aws amplify start-job \
            --app-id $AMPLIFY_APP_ID \
            --branch-name $BRANCH_NAME \
            --job-type RELEASE \
            --job-reason "GitHub Actions Auto Deploy"

      - name: üåê Setup Custom Domain (optional)
        run: |
          DOMAIN_STATUS=$(aws amplify list-domains \
            --app-id $AMPLIFY_APP_ID \
            --query "domains[?domainName=='$CUSTOM_DOMAIN'].domainName" \
            --output text)

          if [ "$DOMAIN_STATUS" != "$CUSTOM_DOMAIN" ]; then
            echo "üåê Attaching custom domain $CUSTOM_DOMAIN..."
            aws amplify create-domain-association \
              --app-id $AMPLIFY_APP_ID \
              --domain-name $CUSTOM_DOMAIN \
              --sub-domain-settings prefix=$BRANCH_NAME,branchName=$BRANCH_NAME
          else
            echo "‚úÖ Custom domain $CUSTOM_DOMAIN already configured."
          fi
