# .github/workflows/deploy-to-amplify.yml

name: Deploy to AWS Amplify

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Frontend to Amplify with Custom Domain
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      AWS_DEFAULT_REGION: ap-south-1
      AMPLIFY_APP_ID: d3tph4ka7rwtei
      BRANCH_NAME: main
      OUTPUT_FOLDER: dist
      CUSTOM_DOMAIN: www.example.com
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build project
        run: npm run build

      - name: Zip build
        run: zip -r deployment.zip $OUTPUT_FOLDER

      - name: Install AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Stop any existing job if running
        run: |
          LAST_JOB_ID=$(aws amplify list-jobs \
            --app-id $AMPLIFY_APP_ID \
            --branch-name $BRANCH_NAME \
            --query "jobSummaries[?status=='PENDING' || status=='RUNNING'] | [0].jobId" \
            --output text)

          if [ "$LAST_JOB_ID" != "None" ]; then
            echo "ðŸ›‘ Stopping existing job $LAST_JOB_ID..."
            aws amplify stop-job \
              --app-id $AMPLIFY_APP_ID \
              --branch-name $BRANCH_NAME \
              --job-id "$LAST_JOB_ID"
            sleep 10
          fi

      - name: Create deployment
        run: |
          DEPLOYMENT_ID=$(aws amplify create-deployment \
            --app-id $AMPLIFY_APP_ID \
            --branch-name $BRANCH_NAME \
            --query 'deploymentId' \
            --output text)

          aws amplify upload-files \
            --app-id $AMPLIFY_APP_ID \
            --branch-name $BRANCH_NAME \
            --deployment-id $DEPLOYMENT_ID \
            --file deployment.zip

          aws amplify start-job \
            --app-id $AMPLIFY_APP_ID \
            --branch-name $BRANCH_NAME \
            --job-type RELEASE

      - name: Set up custom domain (once only)
        if: github.ref == 'refs/heads/main'
        run: |
          DOMAIN_EXISTS=$(aws amplify list-domain-associations \
            --app-id $AMPLIFY_APP_ID \
            --query "domainAssociations[?domainName=='$CUSTOM_DOMAIN']" \
            --output text)

          if [ -z "$DOMAIN_EXISTS" ]; then
            echo "ðŸ”— Creating domain association for $CUSTOM_DOMAIN"
            aws amplify create-domain-association \
              --app-id $AMPLIFY_APP_ID \
              --domain-name $CUSTOM_DOMAIN \
              --sub-domain-settings '[{"prefix": "www", "branchName": "main"}]'
          else
            echo "âœ… Domain already configured: $CUSTOM_DOMAIN"
          fi
