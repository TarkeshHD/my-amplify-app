name: Deploy to AWS Amplify

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      AWS_DEFAULT_REGION: us-east-1
      AMPLIFY_APP_ID: d3tph4ka7rwtei  # ‚úÖ Replace with your actual App ID
      BRANCH_NAME: main
      OUTPUT_FOLDER: dist
      CUSTOM_DOMAIN: www.example.com  # ‚úÖ Replace with your domain (optional)

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Zip Build Folder
        run: zip -r deployment.zip $OUTPUT_FOLDER

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Stop Existing Amplify Job (if any)
        run: |
          LAST_JOB_ID=$(aws amplify list-jobs \
            --app-id $AMPLIFY_APP_ID \
            --branch-name $BRANCH_NAME \
            --query "jobSummaries[?status=='PENDING' || status=='RUNNING'] | [0].jobId" \
            --output text || echo "None")

          if [ "$LAST_JOB_ID" != "None" ]; then
            echo "üõë Stopping existing job $LAST_JOB_ID..."
            aws amplify stop-job \
              --app-id $AMPLIFY_APP_ID \
              --branch-name $BRANCH_NAME \
              --job-id "$LAST_JOB_ID"
            sleep 10
          else
            echo "‚úÖ No running or pending job found"
          fi

      - name: Create Deployment
        run: |
          DEPLOYMENT_INFO=$(aws amplify create-deployment \
            --app-id $AMPLIFY_APP_ID \
            --branch-name $BRANCH_NAME)

          DEPLOYMENT_ID=$(echo $DEPLOYMENT_INFO | jq -r '.deploymentId')
          ZIP_URL=$(echo $DEPLOYMENT_INFO | jq -r '.fileUploadUrls."deployment.zip"')

          echo "üì¶ Uploading deployment.zip..."
          curl -T deployment.zip "$ZIP_URL"

          echo "üöÄ Starting release job..."
          aws amplify start-job \
            --app-id $AMPLIFY_APP_ID \
            --branch-name $BRANCH_NAME \
            --job-type RELEASE \
            --job-reason "GitHub Actions Auto Deploy"

      - name: Configure Custom Domain (Optional)
        if: env.CUSTOM_DOMAIN != ''
        run: |
          echo "üåê Configuring custom domain (if not already configured)..."
          CURRENT_DOMAINS=$(aws amplify list-domain-associations \
            --app-id $AMPLIFY_APP_ID \
            --query "domainAssociations[].domainName" \
            --output text)

          if [[ "$CURRENT_DOMAINS" != *"$CUSTOM_DOMAIN"* ]]; then
            echo "üîß Setting up custom domain: $CUSTOM_DOMAIN"
            aws amplify create-domain-association \
              --app-id $AMPLIFY_APP_ID \
              --domain-name $CUSTOM_DOMAIN \
              --sub-domain-settings prefix=$BRANCH_NAME,branchName=$BRANCH_NAME
          else
            echo "‚úÖ Custom domain $CUSTOM_DOMAIN already exists"
          fi
