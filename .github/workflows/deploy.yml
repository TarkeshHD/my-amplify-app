name: Deploy to Amplify

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AMPLIFY_APP_NAME: ${{ secrets.AMPLIFY_APP_NAME }}
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Create or Get Amplify App
        id: create_app
        run: |
          echo "Checking if Amplify app exists..."
          EXISTING_APP=$(aws amplify list-apps --query "apps[?name=='$AMPLIFY_APP_NAME'].appId" --output text || echo "")
          
          if [ -n "$EXISTING_APP" ] && [ "$EXISTING_APP" != "None" ]; then
            echo "App already exists: $EXISTING_APP"
            APP_ID="$EXISTING_APP"
          else
            echo "Creating new Amplify app..."
            APP_ID=$(aws amplify create-app \
              --name "$AMPLIFY_APP_NAME" \
              --platform "WEB" \
              --output json | jq -r '.app.appId')
          fi
          
          echo "AMPLIFY_APP_ID=$APP_ID" >> $GITHUB_ENV
          echo "App ID: $APP_ID"

      - name: Connect GitHub Repository
        run: |
          if [ -z "$AMPLIFY_APP_ID" ]; then
            echo "Error: AMPLIFY_APP_ID not set"
            exit 1
          fi
          echo "Connecting repository to Amplify..."
          aws amplify update-app \
            --app-id "$AMPLIFY_APP_ID" \
            --repository "https://github.com/${{ github.repository }}" \
            --oauth-token "${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            --platform "WEB"

      - name: Create Amplify Branch
        run: |
          EXISTING_BRANCH=$(aws amplify list-branches \
            --app-id $AMPLIFY_APP_ID \
            --query "branches[?branchName=='main'].branchName" \
            --output text || echo "")

          if [ -n "$EXISTING_BRANCH" ]; then
            echo "Branch 'main' already exists"
          else
            echo "Creating branch 'main'..."
            aws amplify create-branch \
              --app-id $AMPLIFY_APP_ID \
              --branch-name main \
              --framework "React" \
              --stage "PRODUCTION" \
              --enable-auto-build
          fi

      - name: Trigger Deployment
        run: |
          echo "Starting deployment..."
          aws amplify start-job \
            --app-id $AMPLIFY_APP_ID \
            --branch-name main \
            --job-type RELEASE

      - name: Output Amplify URL
        run: |
          URL=$(aws amplify get-app \
            --app-id $AMPLIFY_APP_ID \
            --query 'app.defaultDomain' \
            --output text)
          echo "âœ¨ App deployed at: https://main.$URL"
